- Class: meta
  Course: Start programming with R
  Lesson: Lezione 4
  Author: Valentina Porcu
  Type: Standard
  Organization: DataWiring
  Version: 2.4.3

- Class: text
  Output: In this lesson we first create a small dataset
  
- Class: text
  Output: Press ENTER for the next question. If you are having troubles with a question, you can always enter the skip() command to get the solution and skip to the next one

- Class: cmd_question
  Output: Let's make a small dataframe we will call df1 and insert two variables - var1 with values ​​1, 2, and 3, and var2, with values ​​5, 6, 7. Remember to use the data.frame() function
  CorrectAnswer: df1 <- data.frame(var1 = c(1,2,3), var2 = c(4,5,6))
  AnswerTests: omnitest(correctExpr='df1 <- data.frame(var1 = c(1,2,3), var2 = c(4,5,6))')
  Hint: Enter df1 <- data.frame(var1 = c(1,2,3), var2 = c(4,5,6))

- Class: cmd_question
  Output: Add a third column to df1. We will call it var3 and give it the values ​​7, 8, 9. Use the $ operator
  CorrectAnswer: df1$var3 <- c(7, 8, 9)
  AnswerTests: omnitest(correctExpr='df1$var3 <- c(7, 8, 9)')
  Hint: Enter df1$var3 <- c(7, 8, 9)
  
- Class: cmd_question
  Output: As in the case of the matrices, to select a case and a variable we need to indicate the line first and then the column. Select the second case and the third column
  CorrectAnswer: df1[2,3]
  AnswerTests: omnitest(correctExpr='df1[2,3]')
  Hint: Enter df1[2,3]
  
- Class: cmd_question
  Output: We use operators to extract values ​​bigger than 6 from the variable var3 of df1
  CorrectAnswer: df1$var3 > 6
  AnswerTests: omnitest(correctExpr='df1$var3 > 6')
  Hint: Enter df1$var3 > 6
  
- Class: text
  Output: Now, let's give some examples of other basic R objects
  
- Class: cmd_question
  Output: A list can feature different types of objects. We create a list that contains the values ​​from 1 to 6 as the first object. The second value will be a vector containing the months of January, February and March, as a third the sum (sum) function and as a fourth a boolean containing two TRUE and FALSE. We call the list l1 
  CorrectAnswer: l1 <- list(1:6, c("Gennaio", "Febbraio", "Marzo"), sum, c(TRUE, TRUE, FALSE))
  AnswerTests: omnitest(correctExpr='l1 <- list(1:6, c("Gennaio", "Febbraio", "Marzo"), sum, c(TRUE, TRUE, FALSE))')
  Hint: Enter l1 <- list(1:6, c("Gennaio", "Febbraio", "Marzo"), sum, c(TRUE, TRUE, FALSE))
  
- Class: cmd_question
  Output: Print the l1 list
  CorrectAnswer: l1
  AnswerTests: omnitest(correctExpr='l1')
  Hint: Enter l1
  
- Class: cmd_question
  Output: Now, from the first element of the list, select the third sub-element
  CorrectAnswer: l1[[1]][3]
  AnswerTests: omnitest(correctExpr='l1[[1]][3]')
  Hint: Enter l1[[1]][3]
  
  
- Class: cmd_question
  Output: Now, tome for two quick exercises on factors. Create a v1 vector featuring the following elements “a”, “b”, “c”, “b”, “c”, “b”, “b”,
  CorrectAnswer: v1 <- c("a", "a", "b", "c", "a", "b", "c", "c", "b", "a")
  AnswerTests: omnitest(correctExpr='v1 <- c("a", "a", "b", "c", "a", "b", "c", "c", "b", "a")')
  Hint: Enter v1 <- c("a", "a", "b", "c", "a", "b", "c", "c", "b", "a")
  
- Class: cmd_question
  Output: Now turn v1 into a f1 factor by attributing levels "a", "b" and "c" and "low", "medium" and "high" labels. Remember parameter order = TRUE
  CorrectAnswer: f1 <- factor(v1, order = TRUE, levels = c("a", "b", "c"), labels = "low", "medium", "high")
  AnswerTests: omnitest(correctExpr='f1 <- factor(v1, order = TRUE, levels = c("a", "b", "c"), labels = "low", "medium", "high")')
  Hint: Enter f1 <- factor(v1, order = TRUE, levels = c("a", "b", "c"), labels = "low", "medium", "high")
  
- Class: text
  Output: Fantastic! See you in the next lesson
  


